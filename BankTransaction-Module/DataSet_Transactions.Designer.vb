'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.18034
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet_Transactions"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet_Transactions
    Inherits Global.System.Data.DataSet
    
    Private tabledtbl_Banktransactions As dtbl_BanktransactionsDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("dtbl_Banktransactions")) Is Nothing) Then
                MyBase.Tables.Add(New dtbl_BanktransactionsDataTable(ds.Tables("dtbl_Banktransactions")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtbl_Banktransactions() As dtbl_BanktransactionsDataTable
        Get
            Return Me.tabledtbl_Banktransactions
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet_Transactions = CType(MyBase.Clone,DataSet_Transactions)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("dtbl_Banktransactions")) Is Nothing) Then
                MyBase.Tables.Add(New dtbl_BanktransactionsDataTable(ds.Tables("dtbl_Banktransactions")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabledtbl_Banktransactions = CType(MyBase.Tables("dtbl_Banktransactions"),dtbl_BanktransactionsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtbl_Banktransactions) Is Nothing) Then
                Me.tabledtbl_Banktransactions.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet_Transactions"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet_Transactions.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabledtbl_Banktransactions = New dtbl_BanktransactionsDataTable()
        MyBase.Tables.Add(Me.tabledtbl_Banktransactions)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedtbl_Banktransactions() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet_Transactions = New DataSet_Transactions()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub dtbl_BanktransactionsRowChangeEventHandler(ByVal sender As Object, ByVal e As dtbl_BanktransactionsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtbl_BanktransactionsDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtbl_BanktransactionsRow)
        
        Private columnGUID_BankTransaction As Global.System.Data.DataColumn
        
        Private columnName_BankTransaction As Global.System.Data.DataColumn
        
        Private columnGUID_Type_BankTransaction As Global.System.Data.DataColumn
        
        Private columnID_Attribute_BegZahl As Global.System.Data.DataColumn
        
        Private columnBegZahl As Global.System.Data.DataColumn
        
        Private columnID_Attribute_Buchungstext As Global.System.Data.DataColumn
        
        Private columnBuchungsText As Global.System.Data.DataColumn
        
        Private columnID_Attribute_Info As Global.System.Data.DataColumn
        
        Private columnInfo As Global.System.Data.DataColumn
        
        Private columnID_Attribute_Zahlungsausgang As Global.System.Data.DataColumn
        
        Private columnZahlungsausgang As Global.System.Data.DataColumn
        
        Private columnGUID_Aufragskonto As Global.System.Data.DataColumn
        
        Private columnKontonummer_Auftragskonto As Global.System.Data.DataColumn
        
        Private columnGUID_BLZ_Auftragskonto As Global.System.Data.DataColumn
        
        Private columnBankleitzahl_Auftragskonto As Global.System.Data.DataColumn
        
        Private columnGUID_Payment As Global.System.Data.DataColumn
        
        Private columnPayment As Global.System.Data.DataColumn
        
        Private columnGUID_Gegenkonto As Global.System.Data.DataColumn
        
        Private columnKontonummer_Gegenkonto As Global.System.Data.DataColumn
        
        Private columnGUID_BLZ_Gegenkonto As Global.System.Data.DataColumn
        
        Private columnBankleitzahl_Gegenkonto As Global.System.Data.DataColumn
        
        Private columnGUID_Currency As Global.System.Data.DataColumn
        
        Private columnCurrency As Global.System.Data.DataColumn
        
        Private columnGUID_AltCurr As Global.System.Data.DataColumn
        
        Private columnCurrency_Alternate As Global.System.Data.DataColumn
        
        Private columnID_Attribute_Valuta As Global.System.Data.DataColumn
        
        Private columnValutatag As Global.System.Data.DataColumn
        
        Private columnID_Attribute_Verwendungszweck As Global.System.Data.DataColumn
        
        Private columnVerwendungszweck As Global.System.Data.DataColumn
        
        Private columnGUID_Attribute_Betrag As Global.System.Data.DataColumn
        
        Private columnBetrag As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtbl_Banktransactions"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_BankTransactionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_BankTransaction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_BankTransactionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_BankTransaction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Type_BankTransactionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Type_BankTransaction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Attribute_BegZahlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Attribute_BegZahl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BegZahlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBegZahl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Attribute_BuchungstextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Attribute_Buchungstext
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BuchungsTextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungsText
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Attribute_InfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Attribute_Info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Attribute_ZahlungsausgangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Attribute_Zahlungsausgang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZahlungsausgangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZahlungsausgang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_AufragskontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Aufragskonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Kontonummer_AuftragskontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKontonummer_Auftragskonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_BLZ_AuftragskontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_BLZ_Auftragskonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bankleitzahl_AuftragskontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBankleitzahl_Auftragskonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_PaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Payment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_GegenkontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Gegenkonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Kontonummer_GegenkontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKontonummer_Gegenkonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_BLZ_GegenkontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_BLZ_Gegenkonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bankleitzahl_GegenkontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBankleitzahl_Gegenkonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_CurrencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Currency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurrencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurrency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_AltCurrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_AltCurr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Currency_AlternateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurrency_Alternate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Attribute_ValutaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Attribute_Valuta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ValutatagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValutatag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Attribute_VerwendungszweckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Attribute_Verwendungszweck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VerwendungszweckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVerwendungszweck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUID_Attribute_BetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUID_Attribute_Betrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtbl_BanktransactionsRow
            Get
                Return CType(Me.Rows(index),dtbl_BanktransactionsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtbl_BanktransactionsRowChanging As dtbl_BanktransactionsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtbl_BanktransactionsRowChanged As dtbl_BanktransactionsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtbl_BanktransactionsRowDeleting As dtbl_BanktransactionsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtbl_BanktransactionsRowDeleted As dtbl_BanktransactionsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Adddtbl_BanktransactionsRow(ByVal row As dtbl_BanktransactionsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Adddtbl_BanktransactionsRow( _
                    ByVal GUID_BankTransaction As String,  _
                    ByVal Name_BankTransaction As String,  _
                    ByVal GUID_Type_BankTransaction As String,  _
                    ByVal ID_Attribute_BegZahl As String,  _
                    ByVal BegZahl As String,  _
                    ByVal ID_Attribute_Buchungstext As String,  _
                    ByVal BuchungsText As String,  _
                    ByVal ID_Attribute_Info As String,  _
                    ByVal Info As String,  _
                    ByVal ID_Attribute_Zahlungsausgang As String,  _
                    ByVal Zahlungsausgang As Boolean,  _
                    ByVal GUID_Aufragskonto As String,  _
                    ByVal Kontonummer_Auftragskonto As String,  _
                    ByVal GUID_BLZ_Auftragskonto As String,  _
                    ByVal Bankleitzahl_Auftragskonto As String,  _
                    ByVal GUID_Payment As String,  _
                    ByVal Payment As String,  _
                    ByVal GUID_Gegenkonto As String,  _
                    ByVal Kontonummer_Gegenkonto As String,  _
                    ByVal GUID_BLZ_Gegenkonto As String,  _
                    ByVal Bankleitzahl_Gegenkonto As String,  _
                    ByVal GUID_Currency As String,  _
                    ByVal Currency As String,  _
                    ByVal GUID_AltCurr As String,  _
                    ByVal Currency_Alternate As String,  _
                    ByVal ID_Attribute_Valuta As String,  _
                    ByVal Valutatag As Date,  _
                    ByVal ID_Attribute_Verwendungszweck As String,  _
                    ByVal Verwendungszweck As String,  _
                    ByVal GUID_Attribute_Betrag As String,  _
                    ByVal Betrag As Double) As dtbl_BanktransactionsRow
            Dim rowdtbl_BanktransactionsRow As dtbl_BanktransactionsRow = CType(Me.NewRow,dtbl_BanktransactionsRow)
            Dim columnValuesArray() As Object = New Object() {GUID_BankTransaction, Name_BankTransaction, GUID_Type_BankTransaction, ID_Attribute_BegZahl, BegZahl, ID_Attribute_Buchungstext, BuchungsText, ID_Attribute_Info, Info, ID_Attribute_Zahlungsausgang, Zahlungsausgang, GUID_Aufragskonto, Kontonummer_Auftragskonto, GUID_BLZ_Auftragskonto, Bankleitzahl_Auftragskonto, GUID_Payment, Payment, GUID_Gegenkonto, Kontonummer_Gegenkonto, GUID_BLZ_Gegenkonto, Bankleitzahl_Gegenkonto, GUID_Currency, Currency, GUID_AltCurr, Currency_Alternate, ID_Attribute_Valuta, Valutatag, ID_Attribute_Verwendungszweck, Verwendungszweck, GUID_Attribute_Betrag, Betrag}
            rowdtbl_BanktransactionsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtbl_BanktransactionsRow)
            Return rowdtbl_BanktransactionsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtbl_BanktransactionsDataTable = CType(MyBase.Clone,dtbl_BanktransactionsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtbl_BanktransactionsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGUID_BankTransaction = MyBase.Columns("GUID_BankTransaction")
            Me.columnName_BankTransaction = MyBase.Columns("Name_BankTransaction")
            Me.columnGUID_Type_BankTransaction = MyBase.Columns("GUID_Type_BankTransaction")
            Me.columnID_Attribute_BegZahl = MyBase.Columns("ID_Attribute_BegZahl")
            Me.columnBegZahl = MyBase.Columns("BegZahl")
            Me.columnID_Attribute_Buchungstext = MyBase.Columns("ID_Attribute_Buchungstext")
            Me.columnBuchungsText = MyBase.Columns("BuchungsText")
            Me.columnID_Attribute_Info = MyBase.Columns("ID_Attribute_Info")
            Me.columnInfo = MyBase.Columns("Info")
            Me.columnID_Attribute_Zahlungsausgang = MyBase.Columns("ID_Attribute_Zahlungsausgang")
            Me.columnZahlungsausgang = MyBase.Columns("Zahlungsausgang")
            Me.columnGUID_Aufragskonto = MyBase.Columns("GUID_Aufragskonto")
            Me.columnKontonummer_Auftragskonto = MyBase.Columns("Kontonummer_Auftragskonto")
            Me.columnGUID_BLZ_Auftragskonto = MyBase.Columns("GUID_BLZ_Auftragskonto")
            Me.columnBankleitzahl_Auftragskonto = MyBase.Columns("Bankleitzahl_Auftragskonto")
            Me.columnGUID_Payment = MyBase.Columns("GUID_Payment")
            Me.columnPayment = MyBase.Columns("Payment")
            Me.columnGUID_Gegenkonto = MyBase.Columns("GUID_Gegenkonto")
            Me.columnKontonummer_Gegenkonto = MyBase.Columns("Kontonummer_Gegenkonto")
            Me.columnGUID_BLZ_Gegenkonto = MyBase.Columns("GUID_BLZ_Gegenkonto")
            Me.columnBankleitzahl_Gegenkonto = MyBase.Columns("Bankleitzahl_Gegenkonto")
            Me.columnGUID_Currency = MyBase.Columns("GUID_Currency")
            Me.columnCurrency = MyBase.Columns("Currency")
            Me.columnGUID_AltCurr = MyBase.Columns("GUID_AltCurr")
            Me.columnCurrency_Alternate = MyBase.Columns("Currency_Alternate")
            Me.columnID_Attribute_Valuta = MyBase.Columns("ID_Attribute_Valuta")
            Me.columnValutatag = MyBase.Columns("Valutatag")
            Me.columnID_Attribute_Verwendungszweck = MyBase.Columns("ID_Attribute_Verwendungszweck")
            Me.columnVerwendungszweck = MyBase.Columns("Verwendungszweck")
            Me.columnGUID_Attribute_Betrag = MyBase.Columns("GUID_Attribute_Betrag")
            Me.columnBetrag = MyBase.Columns("Betrag")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGUID_BankTransaction = New Global.System.Data.DataColumn("GUID_BankTransaction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_BankTransaction)
            Me.columnName_BankTransaction = New Global.System.Data.DataColumn("Name_BankTransaction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_BankTransaction)
            Me.columnGUID_Type_BankTransaction = New Global.System.Data.DataColumn("GUID_Type_BankTransaction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Type_BankTransaction)
            Me.columnID_Attribute_BegZahl = New Global.System.Data.DataColumn("ID_Attribute_BegZahl", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Attribute_BegZahl)
            Me.columnBegZahl = New Global.System.Data.DataColumn("BegZahl", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBegZahl)
            Me.columnID_Attribute_Buchungstext = New Global.System.Data.DataColumn("ID_Attribute_Buchungstext", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Attribute_Buchungstext)
            Me.columnBuchungsText = New Global.System.Data.DataColumn("BuchungsText", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungsText)
            Me.columnID_Attribute_Info = New Global.System.Data.DataColumn("ID_Attribute_Info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Attribute_Info)
            Me.columnInfo = New Global.System.Data.DataColumn("Info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInfo)
            Me.columnID_Attribute_Zahlungsausgang = New Global.System.Data.DataColumn("ID_Attribute_Zahlungsausgang", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Attribute_Zahlungsausgang)
            Me.columnZahlungsausgang = New Global.System.Data.DataColumn("Zahlungsausgang", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZahlungsausgang)
            Me.columnGUID_Aufragskonto = New Global.System.Data.DataColumn("GUID_Aufragskonto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Aufragskonto)
            Me.columnKontonummer_Auftragskonto = New Global.System.Data.DataColumn("Kontonummer_Auftragskonto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKontonummer_Auftragskonto)
            Me.columnGUID_BLZ_Auftragskonto = New Global.System.Data.DataColumn("GUID_BLZ_Auftragskonto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_BLZ_Auftragskonto)
            Me.columnBankleitzahl_Auftragskonto = New Global.System.Data.DataColumn("Bankleitzahl_Auftragskonto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBankleitzahl_Auftragskonto)
            Me.columnGUID_Payment = New Global.System.Data.DataColumn("GUID_Payment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Payment)
            Me.columnPayment = New Global.System.Data.DataColumn("Payment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayment)
            Me.columnGUID_Gegenkonto = New Global.System.Data.DataColumn("GUID_Gegenkonto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Gegenkonto)
            Me.columnKontonummer_Gegenkonto = New Global.System.Data.DataColumn("Kontonummer_Gegenkonto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKontonummer_Gegenkonto)
            Me.columnGUID_BLZ_Gegenkonto = New Global.System.Data.DataColumn("GUID_BLZ_Gegenkonto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_BLZ_Gegenkonto)
            Me.columnBankleitzahl_Gegenkonto = New Global.System.Data.DataColumn("Bankleitzahl_Gegenkonto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBankleitzahl_Gegenkonto)
            Me.columnGUID_Currency = New Global.System.Data.DataColumn("GUID_Currency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Currency)
            Me.columnCurrency = New Global.System.Data.DataColumn("Currency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurrency)
            Me.columnGUID_AltCurr = New Global.System.Data.DataColumn("GUID_AltCurr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_AltCurr)
            Me.columnCurrency_Alternate = New Global.System.Data.DataColumn("Currency_Alternate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurrency_Alternate)
            Me.columnID_Attribute_Valuta = New Global.System.Data.DataColumn("ID_Attribute_Valuta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Attribute_Valuta)
            Me.columnValutatag = New Global.System.Data.DataColumn("Valutatag", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValutatag)
            Me.columnID_Attribute_Verwendungszweck = New Global.System.Data.DataColumn("ID_Attribute_Verwendungszweck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Attribute_Verwendungszweck)
            Me.columnVerwendungszweck = New Global.System.Data.DataColumn("Verwendungszweck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVerwendungszweck)
            Me.columnGUID_Attribute_Betrag = New Global.System.Data.DataColumn("GUID_Attribute_Betrag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUID_Attribute_Betrag)
            Me.columnBetrag = New Global.System.Data.DataColumn("Betrag", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBetrag)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newdtbl_BanktransactionsRow() As dtbl_BanktransactionsRow
            Return CType(Me.NewRow,dtbl_BanktransactionsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtbl_BanktransactionsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtbl_BanktransactionsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtbl_BanktransactionsRowChangedEvent) Is Nothing) Then
                RaiseEvent dtbl_BanktransactionsRowChanged(Me, New dtbl_BanktransactionsRowChangeEvent(CType(e.Row,dtbl_BanktransactionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtbl_BanktransactionsRowChangingEvent) Is Nothing) Then
                RaiseEvent dtbl_BanktransactionsRowChanging(Me, New dtbl_BanktransactionsRowChangeEvent(CType(e.Row,dtbl_BanktransactionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtbl_BanktransactionsRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtbl_BanktransactionsRowDeleted(Me, New dtbl_BanktransactionsRowChangeEvent(CType(e.Row,dtbl_BanktransactionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtbl_BanktransactionsRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtbl_BanktransactionsRowDeleting(Me, New dtbl_BanktransactionsRowChangeEvent(CType(e.Row,dtbl_BanktransactionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removedtbl_BanktransactionsRow(ByVal row As dtbl_BanktransactionsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet_Transactions = New DataSet_Transactions()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtbl_BanktransactionsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtbl_BanktransactionsRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtbl_Banktransactions As dtbl_BanktransactionsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtbl_Banktransactions = CType(Me.Table,dtbl_BanktransactionsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_BankTransaction() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.GUID_BankTransactionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_BankTransaction in Tabelle dtbl_Banktransactions ist DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.GUID_BankTransactionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_BankTransaction() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.Name_BankTransactionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Name_BankTransaction in Tabelle dtbl_Banktransactions ist DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.Name_BankTransactionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Type_BankTransaction() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.GUID_Type_BankTransactionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_Type_BankTransaction in Tabelle dtbl_Banktransactions is"& _ 
                            "t DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.GUID_Type_BankTransactionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Attribute_BegZahl() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.ID_Attribute_BegZahlColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ID_Attribute_BegZahl in Tabelle dtbl_Banktransactions ist DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.ID_Attribute_BegZahlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BegZahl() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.BegZahlColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BegZahl in Tabelle dtbl_Banktransactions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.BegZahlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Attribute_Buchungstext() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.ID_Attribute_BuchungstextColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ID_Attribute_Buchungstext in Tabelle dtbl_Banktransactions is"& _ 
                            "t DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.ID_Attribute_BuchungstextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BuchungsText() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.BuchungsTextColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BuchungsText in Tabelle dtbl_Banktransactions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.BuchungsTextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Attribute_Info() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.ID_Attribute_InfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ID_Attribute_Info in Tabelle dtbl_Banktransactions ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.ID_Attribute_InfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Info() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.InfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Info in Tabelle dtbl_Banktransactions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.InfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Attribute_Zahlungsausgang() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.ID_Attribute_ZahlungsausgangColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ID_Attribute_Zahlungsausgang in Tabelle dtbl_Banktransactions"& _ 
                            " ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.ID_Attribute_ZahlungsausgangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Zahlungsausgang() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.ZahlungsausgangColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Zahlungsausgang in Tabelle dtbl_Banktransactions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.ZahlungsausgangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Aufragskonto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.GUID_AufragskontoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_Aufragskonto in Tabelle dtbl_Banktransactions ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.GUID_AufragskontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Kontonummer_Auftragskonto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.Kontonummer_AuftragskontoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Kontonummer_Auftragskonto in Tabelle dtbl_Banktransactions is"& _ 
                            "t DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.Kontonummer_AuftragskontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_BLZ_Auftragskonto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.GUID_BLZ_AuftragskontoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_BLZ_Auftragskonto in Tabelle dtbl_Banktransactions ist D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.GUID_BLZ_AuftragskontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bankleitzahl_Auftragskonto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.Bankleitzahl_AuftragskontoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Bankleitzahl_Auftragskonto in Tabelle dtbl_Banktransactions i"& _ 
                            "st DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.Bankleitzahl_AuftragskontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Payment() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.GUID_PaymentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_Payment in Tabelle dtbl_Banktransactions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.GUID_PaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Payment() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.PaymentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Payment in Tabelle dtbl_Banktransactions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.PaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Gegenkonto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.GUID_GegenkontoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_Gegenkonto in Tabelle dtbl_Banktransactions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.GUID_GegenkontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Kontonummer_Gegenkonto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.Kontonummer_GegenkontoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Kontonummer_Gegenkonto in Tabelle dtbl_Banktransactions ist D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.Kontonummer_GegenkontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_BLZ_Gegenkonto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.GUID_BLZ_GegenkontoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_BLZ_Gegenkonto in Tabelle dtbl_Banktransactions ist DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.GUID_BLZ_GegenkontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bankleitzahl_Gegenkonto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.Bankleitzahl_GegenkontoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Bankleitzahl_Gegenkonto in Tabelle dtbl_Banktransactions ist "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.Bankleitzahl_GegenkontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Currency() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.GUID_CurrencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_Currency in Tabelle dtbl_Banktransactions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.GUID_CurrencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Currency() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.CurrencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Currency in Tabelle dtbl_Banktransactions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.CurrencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_AltCurr() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.GUID_AltCurrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_AltCurr in Tabelle dtbl_Banktransactions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.GUID_AltCurrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Currency_Alternate() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.Currency_AlternateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Currency_Alternate in Tabelle dtbl_Banktransactions ist DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.Currency_AlternateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Attribute_Valuta() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.ID_Attribute_ValutaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ID_Attribute_Valuta in Tabelle dtbl_Banktransactions ist DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.ID_Attribute_ValutaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Valutatag() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.ValutatagColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Valutatag in Tabelle dtbl_Banktransactions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.ValutatagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Attribute_Verwendungszweck() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.ID_Attribute_VerwendungszweckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ID_Attribute_Verwendungszweck in Tabelle dtbl_Banktransaction"& _ 
                            "s ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.ID_Attribute_VerwendungszweckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Verwendungszweck() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.VerwendungszweckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Verwendungszweck in Tabelle dtbl_Banktransactions ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.VerwendungszweckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUID_Attribute_Betrag() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.GUID_Attribute_BetragColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GUID_Attribute_Betrag in Tabelle dtbl_Banktransactions ist DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.GUID_Attribute_BetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Betrag() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtbl_Banktransactions.BetragColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Betrag in Tabelle dtbl_Banktransactions ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtbl_Banktransactions.BetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_BankTransactionNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.GUID_BankTransactionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_BankTransactionNull()
            Me(Me.tabledtbl_Banktransactions.GUID_BankTransactionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_BankTransactionNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.Name_BankTransactionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_BankTransactionNull()
            Me(Me.tabledtbl_Banktransactions.Name_BankTransactionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Type_BankTransactionNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.GUID_Type_BankTransactionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Type_BankTransactionNull()
            Me(Me.tabledtbl_Banktransactions.GUID_Type_BankTransactionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Attribute_BegZahlNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.ID_Attribute_BegZahlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Attribute_BegZahlNull()
            Me(Me.tabledtbl_Banktransactions.ID_Attribute_BegZahlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBegZahlNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.BegZahlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBegZahlNull()
            Me(Me.tabledtbl_Banktransactions.BegZahlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Attribute_BuchungstextNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.ID_Attribute_BuchungstextColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Attribute_BuchungstextNull()
            Me(Me.tabledtbl_Banktransactions.ID_Attribute_BuchungstextColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBuchungsTextNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.BuchungsTextColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBuchungsTextNull()
            Me(Me.tabledtbl_Banktransactions.BuchungsTextColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Attribute_InfoNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.ID_Attribute_InfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Attribute_InfoNull()
            Me(Me.tabledtbl_Banktransactions.ID_Attribute_InfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInfoNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.InfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInfoNull()
            Me(Me.tabledtbl_Banktransactions.InfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Attribute_ZahlungsausgangNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.ID_Attribute_ZahlungsausgangColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Attribute_ZahlungsausgangNull()
            Me(Me.tabledtbl_Banktransactions.ID_Attribute_ZahlungsausgangColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZahlungsausgangNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.ZahlungsausgangColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZahlungsausgangNull()
            Me(Me.tabledtbl_Banktransactions.ZahlungsausgangColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_AufragskontoNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.GUID_AufragskontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_AufragskontoNull()
            Me(Me.tabledtbl_Banktransactions.GUID_AufragskontoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKontonummer_AuftragskontoNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.Kontonummer_AuftragskontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKontonummer_AuftragskontoNull()
            Me(Me.tabledtbl_Banktransactions.Kontonummer_AuftragskontoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_BLZ_AuftragskontoNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.GUID_BLZ_AuftragskontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_BLZ_AuftragskontoNull()
            Me(Me.tabledtbl_Banktransactions.GUID_BLZ_AuftragskontoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBankleitzahl_AuftragskontoNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.Bankleitzahl_AuftragskontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBankleitzahl_AuftragskontoNull()
            Me(Me.tabledtbl_Banktransactions.Bankleitzahl_AuftragskontoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_PaymentNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.GUID_PaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_PaymentNull()
            Me(Me.tabledtbl_Banktransactions.GUID_PaymentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPaymentNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.PaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPaymentNull()
            Me(Me.tabledtbl_Banktransactions.PaymentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_GegenkontoNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.GUID_GegenkontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_GegenkontoNull()
            Me(Me.tabledtbl_Banktransactions.GUID_GegenkontoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKontonummer_GegenkontoNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.Kontonummer_GegenkontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKontonummer_GegenkontoNull()
            Me(Me.tabledtbl_Banktransactions.Kontonummer_GegenkontoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_BLZ_GegenkontoNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.GUID_BLZ_GegenkontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_BLZ_GegenkontoNull()
            Me(Me.tabledtbl_Banktransactions.GUID_BLZ_GegenkontoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBankleitzahl_GegenkontoNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.Bankleitzahl_GegenkontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBankleitzahl_GegenkontoNull()
            Me(Me.tabledtbl_Banktransactions.Bankleitzahl_GegenkontoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_CurrencyNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.GUID_CurrencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_CurrencyNull()
            Me(Me.tabledtbl_Banktransactions.GUID_CurrencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurrencyNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.CurrencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurrencyNull()
            Me(Me.tabledtbl_Banktransactions.CurrencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_AltCurrNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.GUID_AltCurrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_AltCurrNull()
            Me(Me.tabledtbl_Banktransactions.GUID_AltCurrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurrency_AlternateNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.Currency_AlternateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurrency_AlternateNull()
            Me(Me.tabledtbl_Banktransactions.Currency_AlternateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Attribute_ValutaNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.ID_Attribute_ValutaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Attribute_ValutaNull()
            Me(Me.tabledtbl_Banktransactions.ID_Attribute_ValutaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsValutatagNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.ValutatagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetValutatagNull()
            Me(Me.tabledtbl_Banktransactions.ValutatagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Attribute_VerwendungszweckNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.ID_Attribute_VerwendungszweckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Attribute_VerwendungszweckNull()
            Me(Me.tabledtbl_Banktransactions.ID_Attribute_VerwendungszweckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVerwendungszweckNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.VerwendungszweckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVerwendungszweckNull()
            Me(Me.tabledtbl_Banktransactions.VerwendungszweckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUID_Attribute_BetragNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.GUID_Attribute_BetragColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUID_Attribute_BetragNull()
            Me(Me.tabledtbl_Banktransactions.GUID_Attribute_BetragColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBetragNull() As Boolean
            Return Me.IsNull(Me.tabledtbl_Banktransactions.BetragColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBetragNull()
            Me(Me.tabledtbl_Banktransactions.BetragColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class dtbl_BanktransactionsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtbl_BanktransactionsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As dtbl_BanktransactionsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As dtbl_BanktransactionsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
