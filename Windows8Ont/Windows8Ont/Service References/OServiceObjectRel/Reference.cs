//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18051
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 11.0.50727.1
// 
namespace Windows8Ont.OServiceObjectRel {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OServiceObjectRel.OServiceObjectRelSoap")]
    public interface OServiceObjectRelSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Config", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.Config[]> ConfigAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRels", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsAsync(bool onlyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRelsByIdObject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdObjectAsync(string IdObject, bool onlyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRelsByIdOther", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdOtherAsync(string IdOther, bool onlyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRelsByIdObjectAndIdRelationType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdObjectAndIdRelationTypeAsync(string IdObject, string IdRelationType, bool onlyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRelsByIdObjectAndIdRelationTypeAndIdOther", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdObjectAndIdRelationTypeAndIdOtherAsync(string IdObject, string IdRelationType, string IdOther, bool onlyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRelsByIdRelationTypeAndIdOther", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdRelationTypeAndIdOtherAsync(string IdRelationType, string IdOther, bool onlyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRelsByIdParentObject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdParentObjectAsync(string IdParentObject, bool onlyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRelsByIdParentOther", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdParentOtherAsync(string IdParentOther, bool onlyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRelsByIdParentObjectAndIdRelationType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdParentObjectAndIdRelationTypeAsync(string IdParentObject, string IdRelationType, bool onlyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRelsByIdParentObjectAndIdRelationTypeAndIdParentOther", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdParentObjectAndIdRelationTypeAndIdParentOtherAsync(string IdParentObject, string IdRelationType, string IdParentOther, bool onlyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRelsByIdRelationTypeAndIdParentOther", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdRelationTypeAndIdParentOtherAsync(string IdRelationType, string IdParentOther, bool onlyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRelsByIdObjectAndIdRelationTypeAndIdParentOther", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdObjectAndIdRelationTypeAndIdParentOtherAsync(string IdObject, string IdRelationType, string IdParentOther, bool onlyIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObjectRelsByIdParentObjectAndIdRelationTypeAndIdOther", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdParentObjectAndIdRelationTypeAndIdOtherAsync(string IdParentObject, string IdRelationType, string IdOther, bool onlyIds);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Config : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string configItemField;
        
        private string configValueStringField;
        
        private int configValueIntField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ConfigItem {
            get {
                return this.configItemField;
            }
            set {
                this.configItemField = value;
                this.RaisePropertyChanged("ConfigItem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ConfigValueString {
            get {
                return this.configValueStringField;
            }
            set {
                this.configValueStringField = value;
                this.RaisePropertyChanged("ConfigValueString");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ConfigValueInt {
            get {
                return this.configValueIntField;
            }
            set {
                this.configValueIntField = value;
                this.RaisePropertyChanged("ConfigValueInt");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsObjectRel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string iD_ObjectField;
        
        private string name_ObjectField;
        
        private string iD_Parent_ObjectField;
        
        private string name_Parent_ObjectField;
        
        private string iD_OtherField;
        
        private string name_OtherField;
        
        private string iD_Parent_OtherField;
        
        private string name_Parent_OtherField;
        
        private string iD_RelationTypeField;
        
        private string name_RelationTypeField;
        
        private string ontologyField;
        
        private string iD_DirectionField;
        
        private string name_DirectionField;
        
        private System.Nullable<long> orderIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ID_Object {
            get {
                return this.iD_ObjectField;
            }
            set {
                this.iD_ObjectField = value;
                this.RaisePropertyChanged("ID_Object");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name_Object {
            get {
                return this.name_ObjectField;
            }
            set {
                this.name_ObjectField = value;
                this.RaisePropertyChanged("Name_Object");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ID_Parent_Object {
            get {
                return this.iD_Parent_ObjectField;
            }
            set {
                this.iD_Parent_ObjectField = value;
                this.RaisePropertyChanged("ID_Parent_Object");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Name_Parent_Object {
            get {
                return this.name_Parent_ObjectField;
            }
            set {
                this.name_Parent_ObjectField = value;
                this.RaisePropertyChanged("Name_Parent_Object");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ID_Other {
            get {
                return this.iD_OtherField;
            }
            set {
                this.iD_OtherField = value;
                this.RaisePropertyChanged("ID_Other");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Name_Other {
            get {
                return this.name_OtherField;
            }
            set {
                this.name_OtherField = value;
                this.RaisePropertyChanged("Name_Other");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ID_Parent_Other {
            get {
                return this.iD_Parent_OtherField;
            }
            set {
                this.iD_Parent_OtherField = value;
                this.RaisePropertyChanged("ID_Parent_Other");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Name_Parent_Other {
            get {
                return this.name_Parent_OtherField;
            }
            set {
                this.name_Parent_OtherField = value;
                this.RaisePropertyChanged("Name_Parent_Other");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ID_RelationType {
            get {
                return this.iD_RelationTypeField;
            }
            set {
                this.iD_RelationTypeField = value;
                this.RaisePropertyChanged("ID_RelationType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Name_RelationType {
            get {
                return this.name_RelationTypeField;
            }
            set {
                this.name_RelationTypeField = value;
                this.RaisePropertyChanged("Name_RelationType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Ontology {
            get {
                return this.ontologyField;
            }
            set {
                this.ontologyField = value;
                this.RaisePropertyChanged("Ontology");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string ID_Direction {
            get {
                return this.iD_DirectionField;
            }
            set {
                this.iD_DirectionField = value;
                this.RaisePropertyChanged("ID_Direction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Name_Direction {
            get {
                return this.name_DirectionField;
            }
            set {
                this.name_DirectionField = value;
                this.RaisePropertyChanged("Name_Direction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=13)]
        public System.Nullable<long> OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
                this.RaisePropertyChanged("OrderID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface OServiceObjectRelSoapChannel : Windows8Ont.OServiceObjectRel.OServiceObjectRelSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OServiceObjectRelSoapClient : System.ServiceModel.ClientBase<Windows8Ont.OServiceObjectRel.OServiceObjectRelSoap>, Windows8Ont.OServiceObjectRel.OServiceObjectRelSoap {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public OServiceObjectRelSoapClient() : 
                base(OServiceObjectRelSoapClient.GetDefaultBinding(), OServiceObjectRelSoapClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.OServiceObjectRelSoap.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OServiceObjectRelSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(OServiceObjectRelSoapClient.GetBindingForEndpoint(endpointConfiguration), OServiceObjectRelSoapClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OServiceObjectRelSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(OServiceObjectRelSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OServiceObjectRelSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(OServiceObjectRelSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OServiceObjectRelSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.Config[]> ConfigAsync() {
            return base.Channel.ConfigAsync();
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsAsync(bool onlyIds) {
            return base.Channel.ObjectRelsAsync(onlyIds);
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdObjectAsync(string IdObject, bool onlyIds) {
            return base.Channel.ObjectRelsByIdObjectAsync(IdObject, onlyIds);
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdOtherAsync(string IdOther, bool onlyIds) {
            return base.Channel.ObjectRelsByIdOtherAsync(IdOther, onlyIds);
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdObjectAndIdRelationTypeAsync(string IdObject, string IdRelationType, bool onlyIds) {
            return base.Channel.ObjectRelsByIdObjectAndIdRelationTypeAsync(IdObject, IdRelationType, onlyIds);
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdObjectAndIdRelationTypeAndIdOtherAsync(string IdObject, string IdRelationType, string IdOther, bool onlyIds) {
            return base.Channel.ObjectRelsByIdObjectAndIdRelationTypeAndIdOtherAsync(IdObject, IdRelationType, IdOther, onlyIds);
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdRelationTypeAndIdOtherAsync(string IdRelationType, string IdOther, bool onlyIds) {
            return base.Channel.ObjectRelsByIdRelationTypeAndIdOtherAsync(IdRelationType, IdOther, onlyIds);
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdParentObjectAsync(string IdParentObject, bool onlyIds) {
            return base.Channel.ObjectRelsByIdParentObjectAsync(IdParentObject, onlyIds);
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdParentOtherAsync(string IdParentOther, bool onlyIds) {
            return base.Channel.ObjectRelsByIdParentOtherAsync(IdParentOther, onlyIds);
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdParentObjectAndIdRelationTypeAsync(string IdParentObject, string IdRelationType, bool onlyIds) {
            return base.Channel.ObjectRelsByIdParentObjectAndIdRelationTypeAsync(IdParentObject, IdRelationType, onlyIds);
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdParentObjectAndIdRelationTypeAndIdParentOtherAsync(string IdParentObject, string IdRelationType, string IdParentOther, bool onlyIds) {
            return base.Channel.ObjectRelsByIdParentObjectAndIdRelationTypeAndIdParentOtherAsync(IdParentObject, IdRelationType, IdParentOther, onlyIds);
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdRelationTypeAndIdParentOtherAsync(string IdRelationType, string IdParentOther, bool onlyIds) {
            return base.Channel.ObjectRelsByIdRelationTypeAndIdParentOtherAsync(IdRelationType, IdParentOther, onlyIds);
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdObjectAndIdRelationTypeAndIdParentOtherAsync(string IdObject, string IdRelationType, string IdParentOther, bool onlyIds) {
            return base.Channel.ObjectRelsByIdObjectAndIdRelationTypeAndIdParentOtherAsync(IdObject, IdRelationType, IdParentOther, onlyIds);
        }
        
        public System.Threading.Tasks.Task<Windows8Ont.OServiceObjectRel.clsObjectRel[]> ObjectRelsByIdParentObjectAndIdRelationTypeAndIdOtherAsync(string IdParentObject, string IdRelationType, string IdOther, bool onlyIds) {
            return base.Channel.ObjectRelsByIdParentObjectAndIdRelationTypeAndIdOtherAsync(IdParentObject, IdRelationType, IdOther, onlyIds);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.OServiceObjectRelSoap)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.OServiceObjectRelSoap)) {
                return new System.ServiceModel.EndpointAddress("http://localhost/OntWeb/OServiceObjectRel.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return OServiceObjectRelSoapClient.GetBindingForEndpoint(EndpointConfiguration.OServiceObjectRelSoap);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return OServiceObjectRelSoapClient.GetEndpointAddress(EndpointConfiguration.OServiceObjectRelSoap);
        }
        
        public enum EndpointConfiguration {
            
            OServiceObjectRelSoap,
        }
    }
}
